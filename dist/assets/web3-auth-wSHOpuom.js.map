{"version":3,"file":"web3-auth-wSHOpuom.js","sources":["../../src/js/auth/web3-auth.js"],"sourcesContent":["import { signUp } from '../../services/local-storage.js';\n\nexport async function connectMetaMask() {\n    if (!window.ethereum) {\n        throw new Error('MetaMaskがインストールされていません。');\n    }\n\n    try {\n        // MetaMaskに接続\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const address = accounts[0];\n\n        // 署名用のメッセージ\n        const message = `CTCアプリケーションへようこそ!\\n\\nこの署名により、あなたのウォレットを認証します。\\n\\nアドレス: ${address}\\n時間: ${new Date().toISOString()}`;\n\n        // メッセージに署名\n        const signature = await window.ethereum.request({\n            method: 'personal_sign',\n            params: [message, address]\n        });\n\n        // ローカルストレージで認証\n        const { user } = await signUp({\n            email: `${address.toLowerCase()}@wallet.eth`,\n            password: signature.slice(0, 20), // 署名の最初の20文字をパスワードとして使用\n            options: {\n                data: {\n                    wallet_address: address.toLowerCase(),\n                    auth_type: 'metamask'\n                }\n            }\n        });\n\n        return user;\n    } catch (error) {\n        console.error('MetaMask認証エラー:', error);\n        throw error;\n    }\n}"],"names":["connectMetaMask","address","message","signature","user","signUp","error"],"mappings":"gDAEO,eAAeA,GAAkB,CACpC,GAAI,CAAC,OAAO,SACR,MAAM,IAAI,MAAM,yBAAyB,EAG7C,GAAI,CAGA,MAAMC,GADW,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,sBAAuB,GACvD,CAAC,EAGpBC,EAAU;AAAA;AAAA;AAAA;AAAA,QAA0DD,CAAO;AAAA,MAAS,IAAI,KAAI,EAAG,YAAW,CAAE,GAG5GE,EAAY,MAAM,OAAO,SAAS,QAAQ,CAC5C,OAAQ,gBACR,OAAQ,CAACD,EAASD,CAAO,CACrC,CAAS,EAGK,CAAE,KAAAG,GAAS,MAAMC,EAAO,CAC1B,MAAO,GAAGJ,EAAQ,YAAW,CAAE,cAC/B,SAAUE,EAAU,MAAM,EAAG,EAAE,EAC/B,QAAS,CACL,KAAM,CACF,eAAgBF,EAAQ,YAAa,EACrC,UAAW,UAC/B,CACA,CACA,CAAS,EAED,OAAOG,CACV,OAAQE,EAAO,CACZ,cAAQ,MAAM,iBAAkBA,CAAK,EAC/BA,CACd,CACA"}